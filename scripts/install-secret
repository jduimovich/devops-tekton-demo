#!/bin/bash
# port-forward dashboard to port 9097 first.
# create ns test
DOCKERHUB_USERNAME=$MY_DOCKER_USER
DOCKERHUB_PASSWORD=$MY_DOCKER_PW
GITHUB_USERNAME=$MY_PUBLIC_GIT_USER
GITHUB_TOKEN=$MY_PUBLIC_GIT_TOKEN
GITHUB_URL=https://github.com
 
DASHBOARD_HOST=http://localhost:9097  
curl -k -s -m 2 $DASHBOARD_HOST > /dev/null
until [ $? -eq 0 ] ; do
    echo Waiting for $DASHBOARD_HOST
    sleep 1
    curl -k -s -m 2 $DASHBOARD_HOST > /dev/null
done

# EDIT TO TASTE
DASHBOARD_INSTALL_NS=$TEKTON_DEMO_NS
PIPELINE_EXEC_NS=$TEKTON_DEMO_NS
PIPELINE_EXEC_SA=$TEKTON_DEMO_SA

kubectl get secrets -n $PIPELINE_EXEC_NS | grep docker-push  > /dev/null
if [ $? -eq 0 ] ; then
    echo  "docker user and password secret is installed"
    exit 
fi
kubectl get secrets -n $DASHBOARD_INSTALL_NS | grep github-secret  > /dev/null
if [ $? -eq 0 ] ; then
  echo  "git user and password secret is installed"
  exit
fi

kubectl delete secret github-secret -n $DASHBOARD_INSTALL_NS
kubectl delete secret github-repo-access-secret -n $PIPELINE_EXEC_NS
kubectl delete secret docker-push -n $PIPELINE_EXEC_NS
# github-secret is used to create webhooks
kubectl create secret generic github-secret \
  --from-literal=accessToken=$GITHUB_TOKEN \
  --from-literal=secretToken=$(cat /dev/urandom | LC_CTYPE=C tr -dc a-zA-Z0-9 | fold -w 32 | head -n 1) \
  --namespace $DASHBOARD_INSTALL_NS
# github-repo-access-secret is used to check code out of github
USER=$(echo -n ${GITHUB_USERNAME} | base64 )
PASS=$(echo -n ${GITHUB_TOKEN} | base64)
post_data='
{
  "apiVersion":"v1",
  "data":{
   "password":"'"${PASS}"'",
   "username":"'"${USER}"'"
  },
  "kind":"Secret",
  "metadata":{
    "annotations":{
      "tekton.dev/git-0":"'"${GITHUB_URL}"'"
    },
    "labels":{
        "serviceAccount":"'"${PIPELINE_EXEC_SA}"'"
    },
    "name":"github-repo-access-secret",
    "namespace":""
  },
  "type":"kubernetes.io/basic-auth"
}
'
#echo "create secret with post_data=${post_data}"
curl -X POST --header Content-Type:application/json -d "$post_data" http://localhost:9097/proxy/api/v1/namespaces/${PIPELINE_EXEC_NS}/secrets/""
post_data='[{"op":"add","path":"serviceaccount/secrets/-","value":{"name":"github-repo-access-secret"}}]'
curl -X PATCH --header Content-Type:application/json-patch+json -d "$post_data" http://localhost:9097/proxy/api/v1/namespaces/${PIPELINE_EXEC_NS}/serviceaccounts/${PIPELINE_EXEC_SA}
echo "patched github-repo-access-secret onto sa ${PIPELINE_EXEC_SA} in ns ${PIPELINE_EXEC_NS}"
## docker-push secret used to push images to dockerhub
DOCKERUSER=$(echo -n ${DOCKERHUB_USERNAME} | base64 )
DOCKERPASS=$(echo -n ${DOCKERHUB_PASSWORD} | base64 )
# post_data='{"apiVersion":"v1","data":{"password":"'"${DOCKERPASS}"'","username":"'"${DOCKERUSER}"'"},"kind":"Secret","metadata":{"annotations":{"tekton.dev/docker-0":"https://index.docker.io/v1/"},"labels":{"serviceAccount":"'"${PIPELINE_EXEC_SA}"'","name":"docker-push","namespace":"'"${PIPELINE_EXEC_NS}"'"},"type":"kubernetes.io/basic-auth"}'
post_data='
{
  "apiVersion":"v1",
  "data":{
   "password":"'"${DOCKERPASS}"'",
   "username":"'"${DOCKERUSER}"'"
  },
  "kind":"Secret",
  "metadata":{
    "annotations":{
      "tekton.dev/docker-0":"https://index.docker.io/v1/"
    },
    "labels":{
        "serviceAccount":"'"${PIPELINE_EXEC_SA}"'"
    },
    "name":"docker-push",
    "namespace":""
  },
  "type":"kubernetes.io/basic-auth"
}
'
#echo "create docker-push secret with ${post_data}"
curl -X POST --header Content-Type:application/json -d "$post_data" http://localhost:9097/proxy/api/v1/namespaces/${PIPELINE_EXEC_NS}/secrets/
post_data='[{"op":"add","path":"serviceaccount/secrets/-","value":{"name":"docker-push"}}]'
curl -X PATCH --header Content-Type:application/json-patch+json -d "$post_data" http://localhost:9097/proxy/api/v1/namespaces/${PIPELINE_EXEC_NS}/serviceaccounts/${PIPELINE_EXEC_SA}
echo "patched docker-push onto sa ${PIPELINE_EXEC_SA} in ns ${PIPELINE_EXEC_NS}"

